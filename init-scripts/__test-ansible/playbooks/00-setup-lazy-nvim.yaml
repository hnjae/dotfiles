- name: Setup lazy.nvim
  hosts: localhost
  become: false
  vars:
    xdg_config_home: "{{ ansible_env.'XDG_CONFIG_HOME' | default(ansible_env.HOME + '/.config') }}"
    xdg_state_home: "{{ ansible_env.'XDG_STATE_HOME' | default(ansible_env.HOME + '/.local/state') }}"
    xdg_data_home: "{{ ansible_env.XDG_DATA_HOME | default(ansible_env.HOME + '/.local/share') }}"
  tasks:
    - name: Check if zsh exists in PATH
      ansible.builtin.command: "which zsh"
      register: zsh_check
      failed_when: false
      changed_when: false
    - name: Check internet connectivity
      ansible.builtin.command: ping -c 1 1.1.1.1
      register: ping_result
      failed_when: false
      changed_when: false
    - name: Ensure zimfw submodule and init zimfw if required
      when: zsh_check.rc == 0  and ping_result.rc == 0
      block:
        - name: Ensure zimfw submodule
          ansible.builtin.shell: |
            if [ ! -f "{{ xdg_data_home }}/zimfw/init.zsh" ]; then
              git -C {{ playbook_dir }} submodule sync --quiet --recursive
              git -C {{ playbook_dir }} submodule update --init --recursive
            else
              echo "a3c82368-dd25-4d62-ae58-4550ca5ecde8"
            fi
          args:
            executable: /bin/sh
            chdir: "{{ playbook_dir }}"
          register: zimfw_submodule
          changed_when: zimfw_submodule.rc == 0 and ( "a3c82368-dd25-4d62-ae58-4550ca5ecde8" not in zimfw_submodule.stdout )
        - name: Initialize zimfw modules
          ansible.builtin.shell: |
            zsh --interactive -c 'zimfw init'
          args:
            executable: /bin/sh
            creates: "{{ xdg_data_home }}/zimfw/modules"
          environment:
            TERM: dumb
