# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[manager]

keymap = [
  { on = "<C-[>", run = "escape", desc = "Exit visual mode, clear selection, or cancel search" },
  { on = "<C-c>", run = "close", desc = "Close the current tab, or quit if it's last" },
  { on = "<C-z>", run = "suspend", desc = "Suspend the process" },
  { on = "<Esc>", run = "escape", desc = "Exit visual mode, clear selection, or cancel search" },
  { on = "Q", run = "quit --no-cwd-file", desc = "Quit without outputting cwd-file" },
  { on = "q", run = "quit", desc = "Quit the process" },

  # Hopping
  { on = "j", run = "arrow next", desc = "Next file" },
  { on = "k", run = "arrow prev", desc = "Previous file" },

  { on = "<Down>", run = "arrow next", desc = "Next file" },
  { on = "<Up>", run = "arrow prev", desc = "Previous file" },

  { on = "<C-b>", run = "arrow -100%", desc = "Move cursor up one page" },
  { on = "<C-d>", run = "arrow 50%", desc = "Move cursor down half page" },
  { on = "<C-f>", run = "arrow 100%", desc = "Move cursor down one page" },
  { on = "<C-u>", run = "arrow -50%", desc = "Move cursor up half page" },

  { on = "<PageDown>", run = "arrow 100%", desc = "Move cursor down one page" },
  { on = "<PageUp>", run = "arrow -100%", desc = "Move cursor up one page" },
  { on = "<S-PageDown>", run = "arrow 50%", desc = "Move cursor down half page" },
  { on = "<S-PageUp>", run = "arrow -50%", desc = "Move cursor up half page" },

  { on = "G", run = "arrow bot", desc = "Go to bottom" },
  { on = ["g", "g"], run = "arrow top", desc = "Go to top" },

  # Navigation
  { on = "h", run = "leave", desc = "Back to the parent directory" },
  { on = "l", run = "enter", desc = "Enter the child directory" },

  { on = "<Left>", run = "leave", desc = "Back to the parent directory" },
  { on = "<Right>", run = "enter", desc = "Enter the child directory" },

  { on = "H", run = "back", desc = "Back to previous directory" },
  { on = "L", run = "forward", desc = "Forward to next directory" },

  # Toggle
  { on = "<C-a>", run = "toggle_all --state=on", desc = "Select all files" },
  { on = "<C-r>", run = "toggle_all", desc = "Invert selection of all files" },
  { on = "<Space>", run = ["arrow next", "toggle"], desc = "Toggle the current selection state" },

  # Visual mode
  { on = "V", run = "visual_mode --unset", desc = "Enter visual mode (unset mode)" },
  { on = "v", run = "visual_mode", desc = "Enter visual mode (selection mode)" },

  # Seeking
  { on = "J", run = "seek 5", desc = "Seek down 5 units in the preview" },
  { on = "K", run = "seek -5", desc = "Seek up 5 units in the preview" },

  # Spotting
  { on = "<Tab>", run = "spot", desc = "Spot hovered file" },

  # Operation
  { on = "-", run = "link", desc = "Symlink the absolute path of yanked files" },
  { on = ".", run = "hidden toggle", desc = "Toggle the visibility of hidden files" },
  { on = ":", run = "shell --block --interactive", desc = "Run a shell command (block until finishes)" },
  { on = ";", run = "shell --interactive", desc = "Run a shell command" },
  { on = "<C-->", run = "hardlink", desc = "Hardlink yanked files" },
  { on = "<C-s>", run = "escape --search", desc = "Cancel the ongoing search" },
  { on = "<Enter>", run = "open", desc = "Open selected files" },
  { on = "<S-Enter>", run = "open --interactive", desc = "Open selected files interactively" },
  { on = "D", run = "remove --permanently", desc = "Permanently delete selected files" },
  { on = "O", run = "open --interactive", desc = "Open selected files interactively" },
  { on = "P", run = "paste --force", desc = "Paste yanked files (overwrite if the destination exists)" },
  { on = "S", run = "search --via=rg", desc = "Search files by content via ripgrep" },
  { on = "X", run = "unyank", desc = "Cancel the yank status" },
  { on = "Y", run = "unyank", desc = "Cancel the yank status" },
  { on = "Z", run = "plugin zoxide", desc = "Jump to a directory via zoxide" },
  { on = "_", run = "link --relative", desc = "Symlink the relative path of yanked files" },
  { on = "a", run = "create", desc = "Create a file (ends with / for directories)" },
  { on = "d", run = "remove", desc = "Trash selected files" },
  { on = "o", run = "open", desc = "Open selected files" },
  { on = "p", run = "paste", desc = "Paste yanked files" },
  { on = "r", run = "rename --cursor=before_ext", desc = "Rename selected file(s)" },
  { on = "s", run = "search --via=fd", desc = "Search files by name via fd" },
  { on = "x", run = "yank --cut", desc = "Yank selected files (cut)" },
  { on = "y", run = "yank", desc = "Yank selected files (copy)" },
  { on = "z", run = "plugin fzf", desc = "Jump to a file/directory via fzf" },

  # Linemode
  { on = ["b", "m"], run = "linemode btime", desc = "Linemode: btime" },
  { on = ["m", "m"], run = "linemode mtime", desc = "Linemode: mtime" },
  { on = ["m", "n"], run = "linemode none", desc = "Linemode: none" },
  { on = ["m", "o"], run = "linemode owner", desc = "Linemode: owner" },
  { on = ["m", "p"], run = "linemode permissions", desc = "Linemode: permissions" },
  { on = ["m", "s"], run = "linemode size", desc = "Linemode: size" },

  # Copy
  { on = ["c", "c"], run = "copy path", desc = "Copy the file path" },
  { on = ["c", "d"], run = "copy dirname", desc = "Copy the directory path" },
  { on = ["c", "f"], run = "copy filename", desc = "Copy the filename" },
  { on = ["c", "n"], run = "copy name_without_ext", desc = "Copy the filename without extension" },

  # Filter
  { on = "f", run = "filter --smart", desc = "Filter files" },

  # Find
  { on = "/", run = "find --smart", desc = "Find next file" },
  { on = "?", run = "find --previous --smart", desc = "Find previous file" },
  { on = "N", run = "find_arrow --previous", desc = "Previous found" },
  { on = "n", run = "find_arrow", desc = "Next found" },

  # Sorting
  { on = [",", "A"], run = "sort alphabetical --reverse", desc = "Sort alphabetically (reverse)" },
  { on = [",", "B"], run = ["linemode btime", "sort btime --reverse"], desc = "Sort by birth time (reverse)" },
  { on = [",", "E"], run = "sort extension --reverse", desc = "Sort by extension (reverse)" },
  { on = [",", "M"], run = ["linemode mtime", "sort mtime --reverse"], desc = "Sort by modified time (reverse)" },
  { on = [",", "N"], run = "sort natural --reverse", desc = "Sort naturally (reverse)" },
  { on = [",", "S"], run = ["linemode size", "sort size --reverse"], desc = "Sort by size (reverse)" },
  { on = [",", "a"], run = "sort alphabetical --reverse=no", desc = "Sort alphabetically" },
  { on = [",", "b"], run = ["linemode btime", "sort btime --reverse=no"], desc = "Sort by birth time" },
  { on = [",", "e"], run = "sort extension --reverse=no", desc = "Sort by extension" },
  { on = [",", "m"], run = ["linemode mtime", "sort mtime --reverse=no"], desc = "Sort by modified time" },
  { on = [",", "n"], run = "sort natural --reverse=no", desc = "Sort naturally" },
  { on = [",", "r"], run = "sort random --reverse=no", desc = "Sort randomly" },
  { on = [",", "s"], run = ["linemode size", "sort size --reverse=no"], desc = "Sort by size" },

  # Goto
  { on = ["<Space>", "g"], run = "cd --interactive", desc = "Jump interactively" },
  { on = ["c", "g"], run = "cd ~/.config", desc = "Go ~/.config" },
  { on = ["d", "g"], run = "cd ~/Downloads", desc = "Go ~/Downloads" },
  { on = ["f", "g"], run = "follow", desc = "Follow hovered symlink" },
  { on = ["g", "h"], run = "cd ~", desc = "Go home" },

  # Tabs
  { on = "t", run = "tab_create --current", desc = "Create a new tab with CWD" },

  { on = "1", run = "tab_switch 0", desc = "Switch to first tab" },
  { on = "2", run = "tab_switch 1", desc = "Switch to second tab" },
  { on = "3", run = "tab_switch 2", desc = "Switch to third tab" },
  { on = "4", run = "tab_switch 3", desc = "Switch to fourth tab" },
  { on = "5", run = "tab_switch 4", desc = "Switch to fifth tab" },
  { on = "6", run = "tab_switch 5", desc = "Switch to sixth tab" },
  { on = "7", run = "tab_switch 6", desc = "Switch to seventh tab" },
  { on = "8", run = "tab_switch 7", desc = "Switch to eighth tab" },
  { on = "9", run = "tab_switch 8", desc = "Switch to ninth tab" },

  { on = "[", run = "tab_switch -1 --relative", desc = "Switch to previous tab" },
  { on = "]", run = "tab_switch 1 --relative", desc = "Switch to next tab" },

  { on = "{", run = "tab_swap -1", desc = "Swap current tab with previous tab" },
  { on = "}", run = "tab_swap 1", desc = "Swap current tab with next tab" },

  # Tasks
  { on = "w", run = "tasks:show", desc = "Show task manager" },

  # Help
  { on = "<F1>", run = "help", desc = "Open help" },
  { on = "~", run = "help", desc = "Open help" },
]

[tasks]

keymap = [
  { on = "<C-[>", run = "close", desc = "Close task manager" },
  { on = "<C-c>", run = "close", desc = "Close task manager" },
  { on = "<Esc>", run = "close", desc = "Close task manager" },
  { on = "w", run = "close", desc = "Close task manager" },

  { on = "j", run = "arrow next", desc = "Next task" },
  { on = "k", run = "arrow prev", desc = "Previous task" },

  { on = "<Down>", run = "arrow next", desc = "Next task" },
  { on = "<Up>", run = "arrow prev", desc = "Previous task" },

  { on = "<Enter>", run = "inspect", desc = "Inspect the task" },
  { on = "x", run = "cancel", desc = "Cancel the task" },

  # Help
  { on = "<F1>", run = "help", desc = "Open help" },
  { on = "~", run = "help", desc = "Open help" },
]

[spot]

keymap = [
  { on = "<C-[>", run = "close", desc = "Close the spot" },
  { on = "<C-c>", run = "close", desc = "Close the spot" },
  { on = "<Esc>", run = "close", desc = "Close the spot" },
  { on = "<Tab>", run = "close", desc = "Close the spot" },

  { on = "h", run = "swipe prev", desc = "Swipe to previous file" },
  { on = "j", run = "arrow next", desc = "Next line" },
  { on = "k", run = "arrow prev", desc = "Previous line" },
  { on = "l", run = "swipe next", desc = "Swipe to next file" },

  { on = "<Down>", run = "arrow next", desc = "Next line" },
  { on = "<Left>", run = "swipe prev", desc = "Swipe to previous file" },
  { on = "<Right>", run = "swipe next", desc = "Swipe to next file" },
  { on = "<Up>", run = "arrow prev", desc = "Previous line" },

  # Copy
  { on = ["c", "c"], run = "copy cell", desc = "Copy selected cell" },

  # Help
  { on = "<F1>", run = "help", desc = "Open help" },
  { on = "~", run = "help", desc = "Open help" },
]

[pick]

keymap = [
  { on = "<C-[>", run = "close", desc = "Cancel pick" },
  { on = "<C-c>", run = "close", desc = "Cancel pick" },
  { on = "<Enter>", run = "close --submit", desc = "Submit the pick" },
  { on = "<Esc>", run = "close", desc = "Cancel pick" },

  { on = "j", run = "arrow next", desc = "Next option" },
  { on = "k", run = "arrow prev", desc = "Previous option" },

  { on = "<Down>", run = "arrow next", desc = "Next option" },
  { on = "<Up>", run = "arrow prev", desc = "Previous option" },

  # Help
  { on = "<F1>", run = "help", desc = "Open help" },
  { on = "~", run = "help", desc = "Open help" },
]

[input]

keymap = [
  { on = "<C-[>", run = "escape", desc = "Back to normal mode, or cancel input" },
  { on = "<C-c>", run = "close", desc = "Cancel input" },
  { on = "<Enter>", run = "close --submit", desc = "Submit input" },
  { on = "<Esc>", run = "escape", desc = "Back to normal mode, or cancel input" },

  # Mode
  { on = "A", run = ["insert --append", "move eol"], desc = "Move to the EOL, and enter append mode" },
  { on = "I", run = ["insert", "move first-char"], desc = "Move to the BOL, and enter insert mode" },
  { on = "a", run = "insert --append", desc = "Enter append mode" },
  { on = "i", run = "insert", desc = "Enter insert mode" },
  { on = "r", run = "replace", desc = "Replace a single character" },
  { on = "v", run = "visual", desc = "Enter visual mode" },

  # Selection
  { on = "<C-A>", run = ["move bol", "move eol", "visual"], desc = "Select from EOL to BOL" },
  { on = "<C-E>", run = ["move bol", "move eol", "visual"], desc = "Select from BOL to EOL" },
  { on = "V", run = ["move bol", "move eol", "visual"], desc = "Select from BOL to EOL" },

  # Character-wise movement
  { on = "<C-b>", run = "move -1", desc = "Move back a character" },
  { on = "<C-f>", run = "move 1", desc = "Move forward a character" },
  { on = "<Left>", run = "move -1", desc = "Move back a character" },
  { on = "<Right>", run = "move 1", desc = "Move forward a character" },
  { on = "h", run = "move -1", desc = "Move back a character" },
  { on = "l", run = "move 1", desc = "Move forward a character" },

  # Word-wise movement
  { on = "<A-b>", run = "backward", desc = "Move back to the start of the current or previous word" },
  { on = "<A-f>", run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },
  { on = "B", run = "backward --far", desc = "Move back to the start of the current or previous WORD" },
  { on = "E", run = "forward --far --end-of-word", desc = "Move forward to the end of the current or next WORD" },
  { on = "W", run = "forward --far", desc = "Move forward to the start of the next WORD" },
  { on = "b", run = "backward", desc = "Move back to the start of the current or previous word" },
  { on = "e", run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },
  { on = "w", run = "forward", desc = "Move forward to the start of the next word" },

  # Line-wise movement
  { on = "$", run = "move eol", desc = "Move to the EOL" },
  { on = "0", run = "move bol", desc = "Move to the BOL" },
  { on = "<C-a>", run = "move bol", desc = "Move to the BOL" },
  { on = "<C-e>", run = "move eol", desc = "Move to the EOL" },
  { on = "<End>", run = "move eol", desc = "Move to the EOL" },
  { on = "<Home>", run = "move bol", desc = "Move to the BOL" },
  { on = "^", run = "move first-char", desc = "Move to the first non-whitespace character" },
  { on = "_", run = "move first-char", desc = "Move to the first non-whitespace character" },

  # Delete
  { on = "<Backspace>", run = "backspace", desc = "Delete the character before the cursor" },
  { on = "<C-d>", run = "backspace --under", desc = "Delete the character under the cursor" },
  { on = "<C-h>", run = "backspace", desc = "Delete the character before the cursor" },
  { on = "<Delete>", run = "backspace --under", desc = "Delete the character under the cursor" },

  # Kill
  { on = "<A-d>", run = "kill forward", desc = "Kill forwards to the end of the current word" },
  { on = "<C-k>", run = "kill eol", desc = "Kill forwards to the EOL" },
  { on = "<C-u>", run = "kill bol", desc = "Kill backwards to the BOL" },
  { on = "<C-w>", run = "kill backward", desc = "Kill backwards to the start of the current word" },

  # Cut/Yank/Paste
  { on = "C", run = ["delete --cut --insert", "move eol"], desc = "Cut until EOL, and enter insert mode" },
  { on = "D", run = ["delete --cut", "move eol"], desc = "Cut until EOL" },
  { on = "P", run = "paste --before", desc = "Paste copied characters before the cursor" },
  { on = "c", run = "delete --cut --insert", desc = "Cut selected characters, and enter insert mode" },
  { on = "d", run = "delete --cut", desc = "Cut selected characters" },
  { on = "p", run = "paste", desc = "Paste copied characters after the cursor" },
  { on = "x", run = ["delete --cut", "move 1 --in-operating"], desc = "Cut current character" },
  { on = "y", run = "yank", desc = "Copy selected characters" },

  # Undo/Redo
  { on = "<C-r>", run = "redo", desc = "Redo the last operation" },
  { on = "u", run = "undo", desc = "Undo the last operation" },

  # Help
  { on = "<F1>", run = "help", desc = "Open help" },
  { on = "~", run = "help", desc = "Open help" },
]

[confirm]

keymap = [
  { on = "<C-[>", run = "close", desc = "Cancel the confirm" },
  { on = "<C-c>", run = "close", desc = "Cancel the confirm" },
  { on = "<Enter>", run = "close --submit", desc = "Submit the confirm" },
  { on = "<Esc>", run = "close", desc = "Cancel the confirm" },

  { on = "n", run = "close", desc = "Cancel the confirm" },
  { on = "y", run = "close --submit", desc = "Submit the confirm" },

  { on = "j", run = "arrow next", desc = "Next line" },
  { on = "k", run = "arrow prev", desc = "Previous line" },

  { on = "<Down>", run = "arrow next", desc = "Next line" },
  { on = "<Up>", run = "arrow prev", desc = "Previous line" },

  # Help
  { on = "<F1>", run = "help", desc = "Open help" },
  { on = "~", run = "help", desc = "Open help" },
]

[cmp]

keymap = [
  { on = "<C-c>", run = "close", desc = "Cancel completion" },
  { on = "<Enter>", run = ["close --submit", "input:close --submit"], desc = "Complete and submit the input" },
  { on = "<Tab>", run = "close --submit", desc = "Submit the completion" },

  { on = "<A-j>", run = "arrow next", desc = "Next item" },
  { on = "<A-k>", run = "arrow prev", desc = "Previous item" },

  { on = "<Down>", run = "arrow next", desc = "Next item" },
  { on = "<Up>", run = "arrow prev", desc = "Previous item" },

  { on = "<C-n>", run = "arrow next", desc = "Next item" },
  { on = "<C-p>", run = "arrow prev", desc = "Previous item" },

  # Help
  { on = "<F1>", run = "help", desc = "Open help" },
  { on = "~", run = "help", desc = "Open help" },
]

[help]

keymap = [
  { on = "<C-[>", run = "escape", desc = "Clear the filter, or hide the help" },
  { on = "<C-c>", run = "close", desc = "Hide the help" },
  { on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },

  # Navigation
  { on = "j", run = "arrow next", desc = "Next line" },
  { on = "k", run = "arrow prev", desc = "Previous line" },

  { on = "<Down>", run = "arrow next", desc = "Next line" },
  { on = "<Up>", run = "arrow prev", desc = "Previous line" },

  # Filtering
  { on = "f", run = "filter", desc = "Filter help items" },
]
