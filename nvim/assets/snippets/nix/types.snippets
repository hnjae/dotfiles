snippet lt "lib.types"
	lib.types.$0
snippet ltlist "listOf"
	listOf$0
snippet ltstr "str"
	str$0


# snippet lt "description"
# lib.types.__attrsFailEvaluation    lib.types.nonEmptyStr
# lib.types.addCheck                 lib.types.nullOr
# lib.types.anything                 lib.types.number
# lib.types.attrTag                  lib.types.numbers
# lib.types.attrs                    lib.types.oneOf
# lib.types.attrsOf                  lib.types.optionDescriptionPhrase
# lib.types.bool                     lib.types.optionType
# lib.types.boolByOr                 lib.types.package
# lib.types.coercedTo                lib.types.passwdEntry
# lib.types.commas                   lib.types.path
# lib.types.defaultFunctor           lib.types.pathInStore
# lib.types.defaultTypeMerge         lib.types.pkgs
# lib.types.deferredModule           lib.types.port
# lib.types.deferredModuleWith       lib.types.raw
# lib.types.either                   lib.types.separatedString
# lib.types.enum                     lib.types.setType
# lib.types.envVar                   lib.types.shellPackage
# lib.types.float                    lib.types.singleLineStr
# lib.types.functionTo               lib.types.str
# lib.types.int                      lib.types.strMatching
# lib.types.ints                     lib.types.string
# lib.types.isOptionType             lib.types.submodule
# lib.types.isType                   lib.types.submoduleWith
# lib.types.lazyAttrsOf              lib.types.types
# lib.types.lines                    lib.types.uniq
# lib.types.listOf                   lib.types.unique
# lib.types.loaOf                    lib.types.unspecified
# lib.types.mkOptionType
# lib.types.nonEmptyListOf
