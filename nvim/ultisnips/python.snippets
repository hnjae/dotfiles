# Generated by snippet-converter.nvim (https://github.com/smjonas/snippet-converter.nvim)

snippet env "Adds shebang line for default python interpreter."
#!/usr/bin/env python3
$0
endsnippet

snippet de ""
def ${1:function_name}($2) -> {$3:None}:
	${0:pass}
endsnippet

snippet docf "RST Style docstring"
"""
$0
:param arg1 int: description
:raises ValueError: description
:return: description
:rtype: bool

:example:
>>> a=1
>>> fucn_name(a)
True
"""
endsnippet

snippet doc "Oneline docstring"
"""$0."""
endsnippet

snippet fori ""
for $2 in $1:
	$0
endsnippet

snippet fim "Import statement that allows individual objects from the module to be imported directly into the callerâ€™s symbol table."
from ${1:package/module} import ${2:names}
endsnippet

snippet if ""
if ${1:condition}:

endsnippet

snippet ifm "Create implicitly all the code at the top level using the __name__ special variable."
if __name__ == "__main__":
	${1:main()}$0
endsnippet

snippet ignore "noqa"
# noqa: ${0:rule-name}
endsnippet

snippet noqa "noqa"
# noqa: ${0:rule-name}
endsnippet

snippet ignore-entire "noqa"
# ruff: noqa: ${0:rule-name}
endsnippet

snippet im "Import a package or module"
import ${1:package/module}$0
endsnippet

snippet iso8601 "use with strftime"
%Y%m%dT%H%M%S%z
endsnippet

snippet localtime ""
datetime.now(timezone.utc).astimezone()
endsnippet

snippet localtimeinsec ""
datetime.now(timezone.utc).replace(microsecond=0).astimezone()
endsnippet

snippet timeinsec ""
datetime.now(timezone.utc).replace(microsecond=0)
endsnippet

snippet time ""
datetime.now(timezone.utc)
endsnippet
