snippet cl "Create a class"
${1:className} = {}

$1.${2:new} = function($3)
	local ${4:varName} = ${5:value}

	${6: --code}

	return $4
end
endsnippet

snippet self:
function self:${1:methodName}($2)
	$0
end
endsnippet

snippet lo "create a variable"
local $0
endsnippet

snippet lv "create a local variable"
local ${1:varName} = ${0:value}
endsnippet

snippet lopca "Protect call a function as a variable"
local ${1:status}, ${2:err_or_value} = pcall(${3:function})
endsnippet

snippet lopcareq "Protect call a function as a variable"
local is_${1:module_name}, ${1:module_name} = pcall(require, "${1:module_name}")
endsnippet

snippet loreq "Require module as a variable"
local ${1:var} = require("${2:module}")
endsnippet

snippet pca "Protect call a function"
pcall(${1:function})
endsnippet

snippet p
print($0)
endsnippet

snippet req "Require module"
require("${1:module}")
endsnippet

snippet rt "return value"
return $0
endsnippet
