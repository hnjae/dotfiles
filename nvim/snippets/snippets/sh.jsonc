{
  "shell bang": {
    "prefix": [
      "sh"
    ],
    "body": "#!/bin/sh",
    "description": "This is POSIX script"
  },
  "env": {
    "prefix": [
      "env",
      "bash"
    ],
    "body": "#!/usr/bin/env bash",
    "description": "this is bash script"
  },
  "array (bash)": {
    "prefix": "barr",
    "body": "(\n\t$0\n)"
  },
  "for array (bash)": {
    "prefix": "forarr",
    "body": [
      "for ${2:name} in \"${${1:array_name}[@]}\"; do",
      "\t${0:echo} \"${${2:name}}\"",
      "done"
    ]
  },
  "confirm (POSIX)": {
    "prefix": "confirm",
    "body": [
      "confirm() {",
      "\techo \"Are you sure? [YES/Any]: \\c\"",
      "\tread -r response",
      "\tcase \"\\$response\" in",
      "\t\"YES\")",
      "\t\ttrue",
      "\t\t;;",
      "\t*)",
      "\t\tfalse",
      "\t\t;;",
      "\tesac",
      "}$0"
    ],
    "description": "confirm user"
  },
  "confirm (bash)": {
    "prefix": "confirmbash",
    "body": [
      "confirm() {",
      "\tread -n 1 -r -p \"Are you sure? [y/Any]\" response",
      "\tcase \"\\$response\" in",
      "\t[yY])",
      "\t\ttrue",
      "\t\t;;",
      "\t*)",
      "\t\tfalse",
      "\t\t;;",
      "\tesac",
      "}$0"
    ],
    "description": "confirm user"
  },
  "sete (bash)": {
    "prefix": "sete",
    "body": "set -e",
    "description": "exit when error occur"
  },
  "get script directory of script": {
    "prefix": [
      "dir",
      "scriptdir"
    ],
    "body": "$0\"$(cd -- \"$(dirname -- \"$0\")\" && pwd -P)\" >/dev/null 2>&1",
    "description": "It will NOT resolve path. It will NOT WORK if script is being sourced."
  }
}
