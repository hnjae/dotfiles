{
    "stdenv.system": {
        "prefix": [
            "stdenv.system",
            "ssystem"
        ],
        "description": "current system :: string (e.g. x86_64-linux)",
        "body": "stdenv.system"
    },
    "sisAarch64": {
        "prefix": "sisAarch64",
        "description": "stdenv.isAarch64 :: bool",
        "body": "stdenv.isAarch64"
    },
    "sisx86_64": {
        "prefix": "sisx86_64",
        "description": "stdenv.isx86_64 :: bool",
        "body": "stdenv.isx86_64"
    },
    "sisLinux": {
        "prefix": "sisLinux",
        "description": "stdenv.isLinux :: bool",
        "body": "stdenv.isLinux"
    },
    "sisDarwin": {
        "prefix": "sisDarwin",
        "description": "stdenv.isDarwin :: bool",
        "body": [
            "stdenv.isDarwin",
            ""
        ]
    },
    "pwriteScriptBin": {
        "prefix": "pwriteScriptBin",
        "description": "writeScriptBin",
        "body": [
            "(pkgs.writeScriptBin \"${1:name}\" ''",
            "\t#!\\${pkgs.dash\\}/bin/dash",
            "\t$0 \"\\$@\"",
            "'')"
        ]
    },
    "pwriteScript": {
        "prefix": "pwriteScript",
        "description": "pkgs.writeScript",
        "body": [
            "(pkgs.writeScript \"${1:name}\" ''",
            "\t#!\\${pkgs.dash\\}/bin/dash",
            "\t$0 \"\\$@\"",
            "'')"
        ]
    },
    "(prunCommandLocal": {
        "prefix": "(prunCommandLocal",
        "description": "pkgs.runCommandLocal",
        "body": [
            "pkgs.runCommandLocal \"${1:name}\" \\${2:{\\}\\} ''",
            "\t${0:script}",
            "'')",
            ""
        ]
    },
    "pbindbin": {
        "prefix": "pbindbin",
        "description": "use pkgs.runCommand to bindbin",
        "body": ""
    },
    "inp": {
        "prefix": "inp",
        "description": "installPhase in stdenv.mkDerivation",
        "body": [
            "installPhase = ''",
            "\t$0",
            "'';"
        ]
    },
    "Empty hash": {
        "prefix": "hash",
        "description": "Empty hash",
        "body": "\"${1:sha256-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=}\";",
    },
    "meta": {
        "prefix": "meta",
        "description": "Nixpkgs' minimal meta attribute set",
        "body": [
            "meta = {",
            "  description = \"$1\";",
            "  homepage = \"$2\";",
            "  license = lib.licenses.$3;",
            "  maintainers = with lib.maintainers; [ $0 ];",
            "};"
        ]
    },
    "fetchFrom": {
        "prefix": "fetchFrom",
        "body": [
            "fetchFrom${1|GitHub,GitLab,Gitea,Gitiles,BitBucket,Savannah,RepoOrCz,SourceHut|} {",
            "  owner = \"$2\";",
            "  repo = \"$3\";",
            "  rev = \"${4:v\\${version\\}}\";",
            "  hash = \"${5:sha256-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=}\";",
            "};"
        ],
        "description": "fetchFromGitHub, or any other common fetcher from Nixpkgs"
    },
    "fetchurl": {
        "prefix": "fetchurl",
        "body": [
            "fetchurl {",
            "  url = \"$1\";",
            "  hash = \"${2:sha256-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=}\";",
            "};"
        ],
        "description": "fetchurl with default empty hash"
    },
    "package-arguments": {
        "prefix": "pkg",
        "body": [
            "{ lib",
            ", ${1:stdenv}",
            ", $2",
            "}:",
            "",
            "$0"
        ],
        "description": "Package arguments, starting with { lib"
    },
    "stdenv.mkDerivation": {
        "prefix": "mkd",
        "body": [
            "stdenv.mkDerivation (finalAttrs: {",
            "  pname = \"$1\";",
            "  version = \"$2\";",
            "",
            "  src = $3",
            "",
            "  nativeBuildInputs = [",
            "    $4",
            "  ];",
            "  buildInputs = [",
            "    $0",
            "  ];",
            "",
            "  meta = {",
            "    description = \"$5\";",
            "    homepage = \"$6\";",
            "    license = lib.licenses.$7;",
            "    maintainers = with lib.maintainers; [ $8 ];",
            "  };",
            "})"
        ],
        "description": "Nixpkgs' stdenv.mkDerivation template"
    }
}
