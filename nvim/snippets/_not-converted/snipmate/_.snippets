# @comment.note
snippet note note
	`luaeval("string.format(vim.bo.commentstring, string.find(vim.bo.commentstring, ' ') and 'NOTE:' or ' NOTE:')")` $0 <`strftime("%Y-%m-%d")`>
snippet info info
	`luaeval("string.format(vim.bo.commentstring, string.find(vim.bo.commentstring, ' ') and 'INFO:' or ' INFO:')")` $0 <`strftime("%Y-%m-%d")`>


# @comment.todo
snippet todo todo
	`luaeval("string.format(vim.bo.commentstring, string.find(vim.bo.commentstring, ' ') and 'TODO:' or ' TODO:')")` $0 <`strftime("%Y-%m-%d")`>
snippet wip wip
	`luaeval("string.format(vim.bo.commentstring, string.find(vim.bo.commentstring, ' ') and 'WIP:' or ' WIP:')")` $0 <`strftime("%Y-%m-%d")`>
snippet fixme fixme
	`luaeval("string.format(vim.bo.commentstring, string.find(vim.bo.commentstring, ' ') and 'FIXME:' or ' FIXME:')")` $0 <`strftime("%Y-%m-%d")`>

# @comment.warning
snippet warning warning
	`luaeval("string.format(vim.bo.commentstring, string.find(vim.bo.commentstring, ' ') and 'WARNING:' or ' WARNING:')")` $0 <`strftime("%Y-%m-%d")`>
snippet fix
	`luaeval("string.format(vim.bo.commentstring, string.find(vim.bo.commentstring, ' ') and 'FIX:' or ' FIX:')")` $0 <`strftime("%Y-%m-%d")`>
snippet hack hack
	`luaeval("string.format(vim.bo.commentstring, string.find(vim.bo.commentstring, ' ') and 'HACK:' or ' HACK:')")` $0 <`strftime("%Y-%m-%d")`>

# @comment.error
snippet deprecated deprecated
	`luaeval("string.format(vim.bo.commentstring, string.find(vim.bo.commentstring, ' ') and 'DEPRECATED:' or ' DEPRECATED:')")` $0 <`strftime("%Y-%m-%d")`>

snippet uuid uuidv4
	`system("uuidgen | tr -d '\n'")`
