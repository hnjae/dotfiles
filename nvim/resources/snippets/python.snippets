# Generated by snippet-converter.nvim (https://github.com/smjonas/snippet-converter.nvim)

snippet ter "ternary operator"
	${1:true-value} if ${2:condition} else "${3:false-value}"
snippet ia "from __future__ import annotations"
	from __future__ import annotations
snippet sb "Adds shebang line for default python interpreter."
	#!/usr/bin/env python3
	$0
snippet de
	def ${1:function_name}($2) -> ${3:None}:
		${0:pass}
snippet docf RST Style docstring
	"""
	$0
	:param arg1 int: description
	:raises ValueError: description
	:return: description
	:rtype: bool

	:example:
	>>> a=1
	>>> fucn_name(a)
	True
	"""
snippet doc Oneline docstring
	"""$0."""
snippet fori
	for $2 in $1:
		${0:pass}
snippet if
	if ${1:condition}:
		${0:pass}
snippet ifm "Create implicitly all the code at the top level using the __name__ special variable.'
	if __name__ == "__main__":
		${1:main()}$0
snippet ignore noqa
	# noqa: ${0:rule-name}
snippet noqa noqa
	# noqa: ${0:rule-name}
snippet im "Import a package or module'
	import ${1:package/module}$0
snippet fim "Import statement that allows individual objects from the module to be imported directly into the callerâ€™s symbol table."
	from ${1:package/module} import ${2:names}
snippet iso8601 use with strftime
	%Y%m%dT%H%M%S%z
snippet localtime
	datetime.now(tz=timezone.utc).astimezone()
snippet localtimeinsec
	datetime.now(tz=timezone.utc).replace(microsecond=0).astimezone()
snippet timeinsec
	datetime.now(tz=timezone.utc).replace(microsecond=0)
snippet time
	datetime.now(tz=timezone.utc)
snippet today "UTC today"
	datetime.now(tz=datetime.UTC).date()
snippet slogConfig "logging"
	logging.basicConfig(
		level=logging.INFO,
		format="%(asctime)s %(levelname)s: %(message)s",
		datefmt="%Y-%m-%dT%H:%M:%S%z",
	)
	logger = logging.getLogger(__name__)
snippet log "log"
	logger.info("${0:msg}: %s")
