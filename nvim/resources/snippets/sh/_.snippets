snippet envp This is POSIX script
	#!/bin/sh
snippet envb This is bash script
	#!/usr/bin/env bash
snippet arrb "array (bash)"
	(
		$0
	)
snippet forarrb "loop array (bash)"
	for ${2:name} in "\${${1:array_name}[@]}"; do
		${0:echo} "\${$2}"
	done
snippet for "loop variable (POSIX)"
	for ${2:name} in var1 var2 var3; do
		${0:echo} "\${$2}"
	done
snippet forc "loop output of command (POSIX)"
	for ${2:name} in \$(${3:echo a b c}); do
		${0:echo} "\${$2}"
	done
snippet forib "loop numbers (no variable in brace range expressions)(bash)"
	for ${1:i} in {${2:start}..${3:end (included)}..${4:step (optional)}}; do
	   $0echo "Welcome \$$1 times"
	done
snippet forib2 "loop numbers with variables (bash)"
	for ((${1:i} = 0; $1 < ${2:variable-name}; i++)); do
	done
snippet fori "loop numbers (POSIX)"
	for ${1:i} in \$(seq ${2:start} ${4:step(optional)} ${3:end (included)}}); do
	   $0echo "Welcome \$$1 times"
	done
snippet whilei "loop numbers (POSIX)"
	${1:i}=${2:start}
	while [ "\$i" -lt ${3:stop} ]; do
		$0echo "\${$1}"
		$1=\$((\$$1 + ${4:step}))
	done
	unset "$1"
snippet sete exit when error occur
	set -e
snippet if "(POSIX)"
	if ${1:command}; then
		${0:echo "hello"}
	fi
snippet va use var
	"\${$1}"
snippet filename get filename without path
	"\$(basename -- "\${$1}")"
snippet filestem get stem from path
	$0="\${filename%.*}"
snippet "case" "case-in"
	case "$1" in
	${2:???})
		$0
		;;
	*)
		;;
	esac
snippet func
	${1:function_name} () {
		$0
	}
