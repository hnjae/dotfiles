---
- name: Initialize or sync lazy.nvim
  vars:
    lazynvim_marker_file: '{{ xdg_state_home }}/nvim/lazy-nvim-initialized'
    lazy_lock_file: '{{ xdg_config_home }}/nvim/lazy-lock.json'
  block:
    - name: Check if nvim exists in PATH
      ansible.builtin.command: which nvim
      register: nvim_check
      failed_when: false
      changed_when: false
    - name: Handle lazy.nvim init/sync when nvim is available
      when: nvim_check.rc == 0
      ansible.builtin.shell: |
        set -eu
        backup_path() {
          target_path="$1"
          if [ ! -e "$target_path" ]; then
            return
          fi
          backup_path_="${target_path}.backup.$(date --utc '+%Y%m%dT%H%M%S%Z')"
          echo "Existing file/directory found at ${target_path}. Backing up to ${backup_path_}." >&2
          if ! mv -n "$target_path" "$backup_path_"; then
            echo "Failed to move existing file/directory to backup location." >&2
            return 1
          fi
        }
        if [ ! -f "{{ lazy_lock_file }}" ]; then
            echo "ERROR: lazy-lock.json does not exists in {{ lazy_lock_file }}" >&2
            exit 1
        fi
        if [ ! -f "{{ lazynvim_marker_file }}" ]; then
          if ! ping -c 1 -W 5 -- 1.1.1.1 >/dev/null 2>&1; then
            echo "ERROR: Internet is not connected" >&2
            exit 1
          fi
          backup_path "{{ xdg_state_home }}/nvim"
          backup_path "{{ xdg_data_home }}/nvim"
          nvim --headless -c "autocmd User VeryLazy ++once Lazy install" -c "qa"
          mkdir -p "{{ xdg_state_home }}/nvim" && touch "{{ lazynvim_marker_file }}"
          exit 65
        fi
        lock_mtime=$(stat -c '%Y' "{{ lazy_lock_file }}")
        marker_mtime=$(stat -c '%Y' "{{ lazynvim_marker_file }}")
        echo "INFO: lazy.nvim is already initialized." >&2
        if [ "$lock_mtime" -gt "$marker_mtime" ]; then
          if ! ping -c 1 -W 5 -- 1.1.1.1 >/dev/null 2>&1; then
            echo "ERROR: Internet is not connected" >&2
            exit 1
          fi
          echo "INFO: lazy-lock.json is newer than marker file. Syncing..." >&2
          nvim --headless -c "autocmd User VeryLazy ++once Lazy sync" -c "qa"
          touch "{{ lazynvim_marker_file }}"
          exit 64
        fi
      args:
        executable: /bin/sh
      register: sync_result
      changed_when: sync_result.rc in [64, 65]
      failed_when: sync_result.rc not in [0, 64, 65]
